openapi: "3.0.0"
info:
    version: 1.0.0
    title: Swagger prices MS
    license:
        name: MIT
servers:
    - url: http://localhost:8080/
paths:
    /prices:
        get:
            summary: List all prices
            operationId: listPrices
            tags:
                - prices
            parameters:
                - name: limit
                  in: query
                  description: How many items to return at one time (max 100)
                  required: false
                  schema:
                      type: integer
                      format: int32
            responses:
                '200':
                    description: A paged array of prices
                    headers:
                        x-next:
                            description: A link to the next page of responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Prices"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
#        post:
#            summary: Create a pet
#            operationId: createPets
#            tags:
#                - pets
#            responses:
#                '201':
#                    description: Null response
#                default:
#                    description: unexpected error
#                    content:
#                        application/json:
#                            schema:
#                                $ref: "#/components/schemas/Error"
#    /pets/{petId}:
#        get:
#            summary: Info for a specific pet
#            operationId: showPetById
#            tags:
#                - pets
#            parameters:
#                - name: petId
#                  in: path
#                  required: true
#                  description: The id of the pet to retrieve
#                  schema:
#                      type: string
#            responses:
#                '200':
#                    description: Expected response to a valid request
#                    content:
#                        application/json:
#                            schema:
#                                $ref: "#/components/schemas/Pet"
#                default:
#                    description: unexpected error
#                    content:
#                        application/json:
#                            schema:
#                                $ref: "#/components/schemas/Error"
components:
    schemas:
        PriceDTO:
            type: object
            required:
                - id
                - brandId
                - startDate
                - endDate
                - productId
                - priority
                - price
            properties:
                id:
                    type: integer
                    format: int64
                brandId:
                    type: integer
                    format: int64
                startDate:
                    type: string
                    format: date-time
                endDate:
                    type: string
                    format: date-time
                productId:
                    type: integer
                    format: int64
                priority:
                    type: integer
                    format: int64
                price:
                    type: number
                currency:
                    type: string
        Prices:
            type: array
            items:
                $ref: "#/components/schemas/PriceDTO"
        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
