openapi: "3.0.0"
info:
    version: 1.0.0
    title: Swagger prices MS
    license:
        name: MIT
servers:
    -   url: http://localhost:8080/
paths:
    /prices:
        get:
            summary: List all prices
            operationId: listPrices
            tags:
                - prices
            parameters:
                -   name: limit
                    in: query
                    description: How many items to return at one time (max 100)
                    required: false
                    schema:
                        type: integer
                        format: int32
            responses:
                '200':
                    description: A paged array of prices
                    headers:
                        x-next:
                            description: A link to the next page of responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Prices"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        post:
            summary: Create a price
            operationId: createPrice
            tags:
                - prices
            requestBody:
                description: The price to be created
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PriceDTO'
            responses:
                '201':
                    description: The price created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PriceDTO"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /prices/{priceId}:
        get:
            summary: Info for a specific price
            operationId: showPriceById
            tags:
                - prices
            parameters:
                -   name: priceId
                    in: path
                    required: true
                    description: The id of the price to retrieve
                    schema:
                        type: string
            responses:
                '200':
                    description: Expected response to a valid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PriceDTO"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /prices/apply:
        get:
            summary: Info for a specific price which applys for the parameters
            operationId: findPriceByProductAndBrandAndStartDate
            tags:
                - prices
            parameters:
                -   in: query
                    name: applyDate
                    required: true
                    schema:
                        type: string
                        format: date-time
                    description: The date from when we are making the request
                -   in: query
                    name: productId
                    required: true
                    allowEmptyValue: false
                    schema:
                        type: integer
                        format: int64
                        minimum: 0
                    description: The product identifier
                -   in: query
                    name: brandId
                    required: true
                    allowEmptyValue: false
                    schema:
                        type: integer
                        format: int64
                        minimum: 0
                        nullable: false
                    description: The brand identifier
            responses:
                '200':
                    description: Expected response to a valid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PriceDTO"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
components:
    schemas:
        PriceDTO:
            type: object
            required:
                - brandId
                - startDate
                - endDate
                - productId
                - priority
                - price
            properties:
                id:
                    type: integer
                    format: int64
                brandId:
                    type: integer
                    format: int64
                    minimum: 0
                startDate:
                    type: string
                    format: date-time
                endDate:
                    type: string
                    format: date-time
                priceList:
                    type: integer
                    format: int64
                productId:
                    type: integer
                    format: int64
                priority:
                    type: integer
                    format: int64
                price:
                    type: number
                    minimum: 0
                currency:
                    type: string
        Prices:
            type: array
            items:
                $ref: "#/components/schemas/PriceDTO"
        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
